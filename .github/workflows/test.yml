name: Test
on:
  pull_request:
  schedule:
    - cron: "30 2 * * *"
jobs:
  basic-checks:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          # TODO: Adjust uninstall to not need channel
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
      - run: nix build --show-trace .#docs-jsonModuleMaintainers
      - run: nix fmt -- --ci
      - name: Test init --switch with locked inputs
        run: |
          # Copy lock file to home directory for consistent testing
          mkdir -p ~/.config/home-manager
          cp flake.lock ~/.config/home-manager/
          nix run .#home-manager -- init --switch --override-input home-manager .
        # FIXME: nix broken on darwin on unstable
        if: matrix.os != 'macos-latest'
      - run: yes | nix run . -- uninstall
        # FIXME: nix broken on darwin on unstable
        if: matrix.os != 'macos-latest'

  discover-test-groups:
    runs-on: ubuntu-latest
    outputs:
      test-groups: ${{ steps.discover.outputs.test-groups }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Discover test groups
        id: discover
        run: |
          # Get all test group names from the flake using simple string matching
          test_groups=$(nix eval ./tests#packages.x86_64-linux --apply 'pkgs: builtins.filter (name: builtins.substring 0 11 name == "test-group-") (builtins.attrNames pkgs)' --json)
          echo "test-groups=$test_groups" >> $GITHUB_OUTPUT
          echo "Discovered test groups: $test_groups"

  test-groups:
    needs: discover-test-groups
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        test-group: ${{ fromJson(needs.discover-test-groups.outputs.test-groups) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          # TODO: Adjust uninstall to not need channel
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Run ${{ matrix.test-group }}
        run: nix build -j auto --show-trace --option allow-import-from-derivation false --reference-lock-file flake.lock "./tests#${{ matrix.test-group }}"
        env:
          GC_INITIAL_HEAP_SIZE: 8589934592
