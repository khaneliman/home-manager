{ lib, scrubDerivation }:

let
  # List of packages that need to be scrubbed on Darwin
  # Packages are scrubbed on Linux and expected in test output
  packagesToScrub = [
    # keep-sorted start case=no numeric=yes
    "aerc"
    "aerospace"
    "afew"
    "aichat"
    "alacritty"
    "alot"
    "antidote"
    "aria2"
    "atuin"
    "autojump"
    "bacon"
    "bash"
    "bash-completion"
    "bash-preexec"
    "bashInteractive"
    "bashmount"
    "bat"
    "borgmatic"
    "bottom"
    "brave"
    "broot"
    "browserpass"
    "btop"
    "bun"
    "carapace"
    "cava"
    "cbatticon"
    "chromium"
    "claude-code"
    "clock-rs"
    "cmus"
    "codex"
    "comodoro"
    "cudatext"
    "darcs"
    "delta"
    "dircolors"
    "direnv"
    "discocss"
    "discord"
    "dwm-status"
    "earthly"
    "eclipse"
    "element-desktop"
    "emacs"
    "espanso"
    "etesync-dav"
    "eza"
    "fastfetch"
    "feh"
    "floorp"
    "fzf"
    "gallery-dl"
    "gcc"
    "gh"
    "gh-dash"
    "ghostty"
    "git"
    "git-cliff"
    "git-credential-oauth"
    "git-lfs"
    "git-worktree-switcher"
    "gitMinimal"
    "gnupg"
    "go"
    "gradle"
    "granted"
    "grep"
    "grobi"
    "havoc"
    "helix"
    "hello"
    "himalaya"
    "hjson-go"
    "home-manager"
    "hound"
    "hstr"
    "htop"
    "hyfetch"
    "hyprshot"
    "i3status"
    "iamb"
    "info"
    "inori"
    "ion"
    "irssi"
    "isync"
    "jankyborders"
    "java"
    "jetbrains-remote"
    "joplin-desktop"
    "jq"
    "jqp"
    "jujutsu"
    "k9s"
    "kakoune"
    "kbfs"
    "keybase"
    "keynav"
    "khal"
    "khard"
    "kitty"
    "kubecolor"
    "kubeswitch"
    "lapce"
    "lazydocker"
    "lazygit"
    "lazysql"
    "ledger"
    "less"
    "lesspipe"
    "lf"
    "librespot"
    "librewolf"
    "librewolf-unwrapped"
    "lieer"
    "listenbrainz-mpd"
    "lsd"
    "mbsync"
    "megasync"
    "meli"
    "mergiraf"
    "micro"
    "mise"
    "mpd-discord-rpc"
    "mpv"
    "msmtp"
    "mu"
    "mujmap"
    "mullvad-vpn"
    "ncmpcpp"
    "ne"
    "neomutt"
    "neovide"
    "neovim"
    "newsboat"
    "nh"
    "nheko"
    "nix"
    "nix-direnv"
    "nix-index"
    "nix-init"
    "nix-your-shell"
    "notmuch"
    "npth"
    "nushell"
    "nyxt"
    "obs-studio"
    "oh-my-posh"
    "ollama"
    "onlyoffice-desktopeditors"
    "opencode"
    "openstackclient"
    "papis"
    "pass"
    "patdiff"
    "pay-respects"
    "pet"
    "pgcli"
    "pistol"
    "plasma-workspace"
    "pls"
    "poetry"
    "powerline-go"
    "pubs"
    "pyenv"
    "qcal"
    "qutebrowser"
    "ranger"
    "rio"
    "ripgrep"
    "ruff"
    "rxvt-unicode"
    "sage"
    "sapling"
    "sbt"
    "scmpuff"
    "senpai"
    "sftpman"
    "sioyek"
    "skhd"
    "sm64ex"
    "smug"
    "spotify-player"
    "starship"
    "statusNotifierItem"
    "superfile"
    "systembus-notify"
    "taffybar"
    "tahoe-lafs"
    "taskwarrior"
    "tealdeer"
    "termite"
    "texlive"
    "thefuck"
    "thunderbird"
    "timidity"
    "tint2"
    "tiny"
    "tmate"
    "tmux"
    "topgrade"
    "translate-shell"
    "tray-tui"
    "unclutter-xfixes"
    "urxvt"
    "vifm"
    "vim-vint"
    "vimPlugins"
    "visidata"
    "vscode"
    "wallust"
    "watson"
    "waylogout"
    "wezterm"
    "wluma"
    "xcape"
    "xidlehook"
    "xplr"
    "xrandr"
    "xscreensaver"
    "xsuspender"
    "yazi"
    "yq-go"
    "yubikey-agent"
    "z-lua"
    "zed-editor"
    "zellij"
    "zk"
    "zoxide"
    "zplug"
    "zsh"
    "zsh-history-substring-search"
    # keep-sorted end
  ];

  # Create an overlay that scrubs packages in the scrublist
  packageScrubOverlay =
    self: super:
    lib.mapAttrs (
      name: value:
      if lib.elem name packagesToScrub then
        # Apply scrubbing to this specific package
        scrubDerivation name value
      else
        value
    ) super;

in
self: super:
packageScrubOverlay self super
// {
  buildPackages = super.buildPackages.extend packageScrubOverlay;
}
